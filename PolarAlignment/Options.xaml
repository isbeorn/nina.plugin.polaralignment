<ResourceDictionary
    x:Class="NINA.Plugins.PolarAlignment.Options"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behavior="clr-namespace:NINA.WPF.Base.Behaviors;assembly=NINA.WPF.Base"
    xmlns:converters="clr-namespace:NINA.Plugins.PolarAlignment.Converters"
    xmlns:coreconverters="clr-namespace:NINA.Core.Utility.Converters;assembly=NINA.Core"
    xmlns:local="clr-namespace:NINA.Plugins.PolarAlignment"
    xmlns:ninactrl="clr-namespace:NINACustomControlLibrary;assembly=NINACustomControlLibrary"
    xmlns:ns="clr-namespace:NINA.Core.Locale;assembly=NINA.Core"
    xmlns:properties="clr-namespace:NINA.Plugins.PolarAlignment.Properties"
    xmlns:rules="clr-namespace:NINA.Core.Utility.ValidationRules;assembly=NINA.Core"
    xmlns:util="clr-namespace:NINA.Core.Utility;assembly=NINA.Core"
    xmlns:xceed="http://schemas.xceed.com/wpf/xaml/toolkit">
    <DataTemplate x:Key="Three Point Polar Alignment_Options">
        <Grid DataContext="{Binding}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition MinHeight="25" />
                <RowDefinition MinHeight="25" />
                <RowDefinition MinHeight="25" />
                <RowDefinition MinHeight="25" />
                <RowDefinition MinHeight="25" />
                <RowDefinition MinHeight="25" />
                <RowDefinition MinHeight="25" />
                <RowDefinition MinHeight="25" />
                <RowDefinition MinHeight="25" />
                <RowDefinition MinHeight="25" />
                <RowDefinition MinHeight="25" />
                <RowDefinition MinHeight="25" />
                <RowDefinition MinHeight="25" />
            </Grid.RowDefinitions>
            <TextBlock VerticalAlignment="Center" Text="Default Move Rate" />
            <TextBox
                Grid.Column="1"
                MinWidth="80"
                Margin="5,0,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Text="{Binding DefaultMoveRate}" />
            <TextBlock
                Grid.Row="1"
                VerticalAlignment="Center"
                Text="Default East Direction" />
            <CheckBox
                Grid.Row="1"
                Grid.Column="1"
                MinWidth="80"
                Margin="5,0,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                IsChecked="{Binding DefaultEastDirection}" />
            <TextBlock
                Grid.Row="2"
                VerticalAlignment="Center"
                Text="Default Target Distance" />

            <ninactrl:UnitTextBox
                Grid.Row="2"
                Grid.Column="1"
                MinWidth="80"
                Margin="5,0,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Text="{Binding DefaultTargetDistance}"
                Unit="°" />
            <TextBlock
                Grid.Row="3"
                VerticalAlignment="Center"
                Text="Default Search Radius" />
            <ninactrl:UnitTextBox
                Grid.Row="3"
                Grid.Column="1"
                MinWidth="80"
                Margin="5,0,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Text="{Binding DefaultSearchRadius}"
                Unit="°" />

            <TextBlock
                Grid.Row="4"
                VerticalAlignment="Center"
                Text="Axis move timeout factor" />
            <ninactrl:UnitTextBox
                Grid.Row="4"
                Grid.Column="1"
                MinWidth="80"
                Margin="5,0,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Text="{Binding MoveTimeoutFactor}"
                Unit="x" />

            <TextBlock
                Grid.Row="5"
                VerticalAlignment="Center"
                Text="Default azimuth offset from pole" />
            <ninactrl:UnitTextBox
                Grid.Row="5"
                Grid.Column="1"
                MinWidth="80"
                Margin="5,0,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Text="{Binding DefaultAzimuthOffset}"
                Unit="°" />

            <TextBlock
                Grid.Row="6"
                VerticalAlignment="Center"
                Text="Default altitude offset from pole" />
            <ninactrl:UnitTextBox
                Grid.Row="6"
                Grid.Column="1"
                MinWidth="80"
                Margin="5,0,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Text="{Binding DefaultAltitudeOffset}"
                Unit="°" />

            <TextBlock
                Grid.Row="7"
                VerticalAlignment="Center"
                Text="Altitude Error Color" />
            <xceed:ColorPicker
                Grid.Row="7"
                Grid.Column="1"
                Width="80"
                Margin="5,0,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                SelectedColor="{Binding AltitudeErrorColor}" />
            <TextBlock
                Grid.Row="8"
                VerticalAlignment="Center"
                Text="Azimuth Error Color" />
            <xceed:ColorPicker
                Grid.Row="8"
                Grid.Column="1"
                Width="80"
                Margin="5,0,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                SelectedColor="{Binding AzimuthErrorColor}" />
            <TextBlock
                Grid.Row="9"
                VerticalAlignment="Center"
                Text="Total Error Color" />
            <xceed:ColorPicker
                Grid.Row="9"
                Grid.Column="1"
                Width="80"
                Margin="5,0,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                SelectedColor="{Binding TotalErrorColor}" />
            <TextBlock
                Grid.Row="10"
                VerticalAlignment="Center"
                Text="Target Circle Color" />
            <xceed:ColorPicker
                Grid.Row="10"
                Grid.Column="1"
                Width="80"
                Margin="5,0,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                SelectedColor="{Binding TargetCircleColor}" />
            <TextBlock
                Grid.Row="11"
                VerticalAlignment="Center"
                Text="Sucessful Step Color" />
            <xceed:ColorPicker
                Grid.Row="11"
                Grid.Column="1"
                Width="80"
                Margin="5,0,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                SelectedColor="{Binding SuccessColor}" />
            <TextBlock
                Grid.Row="12"
                VerticalAlignment="Center"
                Text="Log polar alignment error adjustments?" />
            <CheckBox
                Grid.Row="12"
                Grid.Column="1"
                MinWidth="80"
                Margin="5,0,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                IsChecked="{Binding LogError}" />
        </Grid>
    </DataTemplate>


    <GeometryGroup x:Key="ThreePointsSVG">
        <PathGeometry Figures="M 339.151,73.308C 269.4,71.1613 198.531,92.2653 139.088,138.213L 152.948,156.156C 279.145,58.6093 460.145,81.5319 558.047,207.453L 558.036,207.453C 655.911,333.396 633.463,514.453 507.791,612.677L 521.755,630.552C 657.067,524.792 681.328,329.141 575.948,193.537C 516.656,117.271 428.828,76.068 339.151,73.308 Z " />
        <PathGeometry Figures="M 1.39872e-005,144.041L 90.348,187.36L 105.891,286.349L 175.004,213.803L 273.948,229.615L 226.317,141.469L 271.927,52.256L 262.5,53.9799L 173.375,70.3173L 102.615,-0.634766L 89.3427,98.6826M 21.3747,143.797L 98.0573,104.865L 109.457,19.6199L 170.187,80.516L 254.785,65.0106L 215.624,141.595L 256.509,217.256L 171.588,203.677L 112.26,265.943L 98.9267,180.984" />
        <PathGeometry Figures="M 566.052,456.797L 492.244,535.932L 385.219,520L 437.681,614.641L 389.452,711.505L 495.676,690.871L 572.9,766.667L 573.984,757.833L 586.088,659.261L 682.041,609.235L 583.968,563.505M 560.333,475.797L 576.077,569.516L 662.203,609.683L 577.937,653.609L 566.348,747.928L 498.531,681.365L 405.244,699.495L 447.599,614.423L 401.531,531.308L 495.525,545.292" />
        <PathGeometry Figures="M 474.588,69.016L 489.853,165.037L 419.405,232.047L 515.437,247.204L 557.4,334.901L 601.489,248.251L 697.864,235.443L 690.187,227.771L 629.083,166.74L 646.681,71.1199L 560.083,115.313M 488.572,88.7813L 559.937,127.417L 632.213,90.5373L 617.52,170.333L 674.932,227.683L 594.5,238.365L 557.697,310.688L 522.676,237.495L 442.525,224.844L 501.317,168.917" />
    </GeometryGroup>

    <SolidColorBrush x:Key="AltitudeErrorColor" Color="{Binding Source={x:Static properties:Settings.Default}, Path=AltitudeErrorColor}" />
    <SolidColorBrush x:Key="AzimuthErrorColor" Color="{Binding Source={x:Static properties:Settings.Default}, Path=AzimuthErrorColor}" />
    <SolidColorBrush x:Key="TotalErrorColor" Color="{Binding Source={x:Static properties:Settings.Default}, Path=TotalErrorColor}" />
    <SolidColorBrush x:Key="TargetCircleColor" Color="{Binding Source={x:Static properties:Settings.Default}, Path=TargetCircleColor}" />
    <SolidColorBrush x:Key="SuccessColor" Color="{Binding Source={x:Static properties:Settings.Default}, Path=SuccessColor}" />
    <converters:PointToCircleParameterConverter x:Key="PointToCircleParameterConverter" />
    <converters:InvertCanvasBoundsConverter x:Key="InvertCanvasBoundsConverter" />
    <converters:ClipToScaleConverter x:Key="ClipToScaleConverter" />
    <converters:ErrorDetailToClipPathSegmentCollectionConverter x:Key="ErrorDetailToClipPathSegmentCollectionConverter" />
    <converters:AddToDoubleConverter x:Key="AddToDoubleConverter" />
    <coreconverters:BooleanToVisibilityCollapsedConverter x:Key="VisibilityConverter" />
    <coreconverters:InverseBooleanToVisibilityCollapsedConverter x:Key="InverseBooleanToVisibilityCollapsedConverter" />
    <coreconverters:NullToVisibilityCollapsedConverter x:Key="NullToVisibilityCollapsedConverter" />


    <DataTemplate DataType="{x:Type local:TPAPAVM}">
        <Grid Margin="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Grid Grid.Row="0" Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Border
                    Grid.Row="0"
                    BorderBrush="{DynamicResource BorderBrush}"
                    BorderThickness="0,0,0,1">
                    <Grid Margin="0,0,5,0" HorizontalAlignment="Stretch">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <TextBlock
                            Grid.Row="1"
                            FontSize="16"
                            Text="{Binding Status.Status}" />
                        <Grid
                            Grid.Row="2"
                            Height="20"
                            MinWidth="100"
                            Margin="0,5,0,0"
                            DataContext="{Binding Status}">
                            <ProgressBar
                                x:Name="pbProgress"
                                Height="20"
                                VerticalAlignment="Center"
                                Maximum="{Binding MaxProgress}"
                                Minimum="0"
                                Value="{Binding Progress}" />
                            <StackPanel
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Orientation="Horizontal">
                                <TextBlock VerticalAlignment="Center" Text="{Binding ElementName=pbProgress, Path=Value, StringFormat=\{0:#%\}}" />
                                <StackPanel.Style>
                                    <Style TargetType="StackPanel">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ProgressType}" Value="1">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </StackPanel.Style>
                            </StackPanel>
                            <StackPanel
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Orientation="Horizontal">
                                <TextBlock VerticalAlignment="Center" Text="{Binding ElementName=pbProgress, Path=Value, StringFormat=\{0:#\}}" />
                                <TextBlock VerticalAlignment="Center" Text=" / " />
                                <TextBlock VerticalAlignment="Center" Text="{Binding ElementName=pbProgress, Path=Maximum}" />
                                <StackPanel.Style>
                                    <Style TargetType="StackPanel">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ProgressType}" Value="0">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </StackPanel.Style>
                            </StackPanel>
                            <Grid.Style>
                                <Style TargetType="Grid">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Progress}" Value="-1">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                        </Grid>
                        <Grid>
                            <ItemsControl ItemsSource="{Binding Steps}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Grid Height="25" Visibility="{Binding Relevant, Converter={StaticResource VisibilityConverter}}">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <TextBlock
                                                VerticalAlignment="Center"
                                                FontSize="14"
                                                Text="{Binding Name}"
                                                Visibility="{Binding Completed, Converter={StaticResource InverseBooleanToVisibilityCollapsedConverter}}" />
                                            <TextBlock
                                                VerticalAlignment="Center"
                                                FontSize="14"
                                                Foreground="{StaticResource SuccessColor}"
                                                Text="{Binding Name}"
                                                Visibility="{Binding Completed, Converter={StaticResource VisibilityConverter}}" />
                                            <ninactrl:LoadingControl
                                                Grid.Column="1"
                                                Margin="2.5"
                                                VerticalAlignment="Stretch"
                                                LoadingImageBrush="{StaticResource PrimaryBrush}"
                                                Visibility="{Binding Active, Converter={StaticResource VisibilityConverter}}" />
                                            <Path
                                                Grid.Column="1"
                                                Margin="2.5"
                                                VerticalAlignment="Stretch"
                                                Data="{StaticResource CheckedCircledSVG}"
                                                Fill="{StaticResource SuccessColor}"
                                                Stretch="Uniform"
                                                Visibility="{Binding Completed, Converter={StaticResource VisibilityConverter}}" />
                                        </Grid>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </Grid>
                    </Grid>
                </Border>
                <Border
                    x:Name="PART_MiniBorder"
                    Grid.Row="2"
                    Grid.Column="1"
                    Grid.ColumnSpan="2"
                    BorderBrush="{DynamicResource BorderBrush}"
                    BorderThickness="0,0,0,1">
                    <Grid>
                        <Viewbox Stretch="Uniform">
                            <Canvas
                                x:Name="PART_MiniCanvas"
                                Width="{Binding ActualWidth, ElementName=PART_MiniImage}"
                                Height="{Binding ActualHeight, ElementName=PART_MiniImage}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                ClipToBounds="True">
                                <Canvas.Background>
                                    <VisualBrush>
                                        <VisualBrush.Visual>
                                            <Image
                                                x:Name="PART_MiniImage"
                                                RenderOptions.BitmapScalingMode="HighQuality"
                                                Source="{Binding Image.Image}"
                                                Stretch="Uniform" />
                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </Canvas.Background>

                                <!--  Total Error  -->
                                <Line
                                    Stroke="{StaticResource TotalErrorColor}"
                                    StrokeThickness="3"
                                    X1="{Binding ErrorDetail.Origin.X}"
                                    X2="{Binding ErrorDetail.Total.X}"
                                    Y1="{Binding ErrorDetail.Origin.Y}"
                                    Y2="{Binding ErrorDetail.Total.Y}" />

                                <!--  Destination Circle  -->
                                <Ellipse
                                    Canvas.Left="{Binding ErrorDetail.Total, Converter={StaticResource PointToCircleParameterConverter}, ConverterParameter=X1|20}"
                                    Canvas.Top="{Binding ErrorDetail.Total, Converter={StaticResource PointToCircleParameterConverter}, ConverterParameter=Y1|20}"
                                    Width="{Binding ErrorDetail.Total, Converter={StaticResource PointToCircleParameterConverter}, ConverterParameter=X2|20}"
                                    Height="{Binding ErrorDetail.Total, Converter={StaticResource PointToCircleParameterConverter}, ConverterParameter=Y2|20}"
                                    Stroke="{StaticResource TargetCircleColor}"
                                    StrokeThickness="3"
                                    Visibility="{Binding ErrorDetail, Converter={StaticResource NullToVisibilityCollapsedConverter}}" />

                                <Ellipse
                                    Canvas.Left="{Binding ErrorDetail.Total, Converter={StaticResource PointToCircleParameterConverter}, ConverterParameter=X1|50}"
                                    Canvas.Top="{Binding ErrorDetail.Total, Converter={StaticResource PointToCircleParameterConverter}, ConverterParameter=Y1|50}"
                                    Width="{Binding ErrorDetail.Total, Converter={StaticResource PointToCircleParameterConverter}, ConverterParameter=X2|50}"
                                    Height="{Binding ErrorDetail.Total, Converter={StaticResource PointToCircleParameterConverter}, ConverterParameter=Y2|50}"
                                    Stroke="{StaticResource TargetCircleColor}"
                                    StrokeThickness="3"
                                    Visibility="{Binding ErrorDetail, Converter={StaticResource NullToVisibilityCollapsedConverter}}" />

                                <!--  X Starting point  -->
                                <Line
                                    Stroke="{StaticResource TargetCircleColor}"
                                    StrokeThickness="3"
                                    X1="{Binding ErrorDetail.Origin.X, Converter={StaticResource AddToDoubleConverter}, ConverterParameter=-10}"
                                    X2="{Binding ErrorDetail.Origin.X, Converter={StaticResource AddToDoubleConverter}, ConverterParameter=10}"
                                    Y1="{Binding ErrorDetail.Origin.Y, Converter={StaticResource AddToDoubleConverter}, ConverterParameter=-10}"
                                    Y2="{Binding ErrorDetail.Origin.Y, Converter={StaticResource AddToDoubleConverter}, ConverterParameter=10}" />
                                <Line
                                    Stroke="{StaticResource TargetCircleColor}"
                                    StrokeThickness="3"
                                    X1="{Binding ErrorDetail.Origin.X, Converter={StaticResource AddToDoubleConverter}, ConverterParameter=-10}"
                                    X2="{Binding ErrorDetail.Origin.X, Converter={StaticResource AddToDoubleConverter}, ConverterParameter=10}"
                                    Y1="{Binding ErrorDetail.Origin.Y, Converter={StaticResource AddToDoubleConverter}, ConverterParameter=10}"
                                    Y2="{Binding ErrorDetail.Origin.Y, Converter={StaticResource AddToDoubleConverter}, ConverterParameter=-10}" />

                                <!--  Altitude Error  -->
                                <Line
                                    Stroke="{StaticResource AltitudeErrorColor}"
                                    StrokeThickness="3"
                                    X1="{Binding ErrorDetail.Origin.X}"
                                    X2="{Binding ErrorDetail.Altitude.X}"
                                    Y1="{Binding ErrorDetail.Origin.Y}"
                                    Y2="{Binding ErrorDetail.Altitude.Y}" />
                                <Line
                                    Stroke="{StaticResource AltitudeErrorColor}"
                                    StrokeThickness="3"
                                    X1="{Binding ErrorDetail.Azimuth.X}"
                                    X2="{Binding ErrorDetail.Total.X}"
                                    Y1="{Binding ErrorDetail.Azimuth.Y}"
                                    Y2="{Binding ErrorDetail.Total.Y}" />

                                <!--  Azimuth Error  -->
                                <Line
                                    Stroke="{StaticResource AzimuthErrorColor}"
                                    StrokeThickness="3"
                                    X1="{Binding ErrorDetail.Altitude.X}"
                                    X2="{Binding ErrorDetail.Total.X}"
                                    Y1="{Binding ErrorDetail.Altitude.Y}"
                                    Y2="{Binding ErrorDetail.Total.Y}" />
                                <Line
                                    Stroke="{StaticResource AzimuthErrorColor}"
                                    StrokeThickness="3"
                                    X1="{Binding ErrorDetail.Origin.X}"
                                    X2="{Binding ErrorDetail.Azimuth.X}"
                                    Y1="{Binding ErrorDetail.Origin.Y}"
                                    Y2="{Binding ErrorDetail.Azimuth.Y}" />
                                <Canvas.Clip>
                                    <PathGeometry Figures="{Binding ErrorDetail, Converter={StaticResource ErrorDetailToClipPathSegmentCollectionConverter}}" />
                                </Canvas.Clip>
                                <Canvas.RenderTransform>
                                    <TransformGroup>
                                        <TranslateTransform X="{Binding Clip.Bounds, ElementName=PART_MiniCanvas, Converter={StaticResource InvertCanvasBoundsConverter}, ConverterParameter=Left}" Y="{Binding Clip.Bounds, ElementName=PART_MiniCanvas, Converter={StaticResource InvertCanvasBoundsConverter}, ConverterParameter=Top}" />
                                        <ScaleTransform>

                                            <ScaleTransform.ScaleX>
                                                <MultiBinding Converter="{StaticResource ClipToScaleConverter}">
                                                    <Binding ElementName="PART_MiniCanvas" Path="Width" />
                                                    <Binding ElementName="PART_MiniCanvas" Path="Clip.Bounds" />
                                                </MultiBinding>
                                            </ScaleTransform.ScaleX>

                                            <ScaleTransform.ScaleY>
                                                <MultiBinding Converter="{StaticResource ClipToScaleConverter}">
                                                    <Binding ElementName="PART_MiniCanvas" Path="Height" />
                                                    <Binding ElementName="PART_MiniCanvas" Path="Clip.Bounds" />
                                                </MultiBinding>
                                            </ScaleTransform.ScaleY>
                                        </ScaleTransform>
                                    </TransformGroup>
                                </Canvas.RenderTransform>
                            </Canvas>
                        </Viewbox>
                    </Grid>
                </Border>
            </Grid>

            <Border
                x:Name="PART_Border"
                Grid.Row="0"
                Grid.Column="1"
                Grid.ColumnSpan="2"
                BorderBrush="{DynamicResource BorderBrush}"
                BorderThickness="1,0,0,1">
                <Grid>
                    <Viewbox Stretch="Uniform">
                        <Canvas
                            Width="{Binding ActualWidth, ElementName=PART_Image}"
                            Height="{Binding ActualHeight, ElementName=PART_Image}"
                            behavior:MouseCommandBehavior.Enabled="True"
                            behavior:MouseCommandBehavior.LeftMouseDownCommand="{Binding LeftMouseButtonDownCommand}"
                            ClipToBounds="True">
                            <Canvas.Background>
                                <VisualBrush>
                                    <VisualBrush.Visual>
                                        <Image
                                            x:Name="PART_Image"
                                            RenderOptions.BitmapScalingMode="HighQuality"
                                            Source="{Binding Image.Image}"
                                            Stretch="Uniform" />
                                    </VisualBrush.Visual>
                                </VisualBrush>
                            </Canvas.Background>

                            <!--<Polygon
                                behavior:DragCommandBehavior.Drag="False"
                                behavior:DragCommandBehavior.DragMoveCommand="{Binding DragMoveCommand}"
                                Fill="Black"
                                Opacity="0.05"
                                Points="{Binding ErrorDetail.Rectangle}" />-->

                            <!--  Total Error  -->
                            <Line
                                Stroke="{StaticResource TotalErrorColor}"
                                StrokeThickness="3"
                                X1="{Binding ErrorDetail.Origin.X}"
                                X2="{Binding ErrorDetail.Total.X}"
                                Y1="{Binding ErrorDetail.Origin.Y}"
                                Y2="{Binding ErrorDetail.Total.Y}" />

                            <!--  Destination Circle  -->
                            <Ellipse
                                Canvas.Left="{Binding ErrorDetail.Total, Converter={StaticResource PointToCircleParameterConverter}, ConverterParameter=X1|20}"
                                Canvas.Top="{Binding ErrorDetail.Total, Converter={StaticResource PointToCircleParameterConverter}, ConverterParameter=Y1|20}"
                                Width="{Binding ErrorDetail.Total, Converter={StaticResource PointToCircleParameterConverter}, ConverterParameter=X2|20}"
                                Height="{Binding ErrorDetail.Total, Converter={StaticResource PointToCircleParameterConverter}, ConverterParameter=Y2|20}"
                                Stroke="{StaticResource TargetCircleColor}"
                                StrokeThickness="3"
                                Visibility="{Binding ErrorDetail, Converter={StaticResource NullToVisibilityCollapsedConverter}}" />

                            <Ellipse
                                Canvas.Left="{Binding ErrorDetail.Total, Converter={StaticResource PointToCircleParameterConverter}, ConverterParameter=X1|50}"
                                Canvas.Top="{Binding ErrorDetail.Total, Converter={StaticResource PointToCircleParameterConverter}, ConverterParameter=Y1|50}"
                                Width="{Binding ErrorDetail.Total, Converter={StaticResource PointToCircleParameterConverter}, ConverterParameter=X2|50}"
                                Height="{Binding ErrorDetail.Total, Converter={StaticResource PointToCircleParameterConverter}, ConverterParameter=Y2|50}"
                                Stroke="{StaticResource TargetCircleColor}"
                                StrokeThickness="3"
                                Visibility="{Binding ErrorDetail, Converter={StaticResource NullToVisibilityCollapsedConverter}}" />

                            <!--  X Starting point  -->
                            <Line
                                Stroke="{StaticResource TargetCircleColor}"
                                StrokeThickness="3"
                                X1="{Binding ErrorDetail.Origin.X, Converter={StaticResource AddToDoubleConverter}, ConverterParameter=-10}"
                                X2="{Binding ErrorDetail.Origin.X, Converter={StaticResource AddToDoubleConverter}, ConverterParameter=10}"
                                Y1="{Binding ErrorDetail.Origin.Y, Converter={StaticResource AddToDoubleConverter}, ConverterParameter=-10}"
                                Y2="{Binding ErrorDetail.Origin.Y, Converter={StaticResource AddToDoubleConverter}, ConverterParameter=10}" />
                            <Line
                                Stroke="{StaticResource TargetCircleColor}"
                                StrokeThickness="3"
                                X1="{Binding ErrorDetail.Origin.X, Converter={StaticResource AddToDoubleConverter}, ConverterParameter=-10}"
                                X2="{Binding ErrorDetail.Origin.X, Converter={StaticResource AddToDoubleConverter}, ConverterParameter=10}"
                                Y1="{Binding ErrorDetail.Origin.Y, Converter={StaticResource AddToDoubleConverter}, ConverterParameter=10}"
                                Y2="{Binding ErrorDetail.Origin.Y, Converter={StaticResource AddToDoubleConverter}, ConverterParameter=-10}" />

                            <!--  Altitude Error  -->
                            <Line
                                Stroke="{StaticResource AltitudeErrorColor}"
                                StrokeThickness="3"
                                X1="{Binding ErrorDetail.Origin.X}"
                                X2="{Binding ErrorDetail.Altitude.X}"
                                Y1="{Binding ErrorDetail.Origin.Y}"
                                Y2="{Binding ErrorDetail.Altitude.Y}" />
                            <Line
                                Stroke="{StaticResource AltitudeErrorColor}"
                                StrokeThickness="3"
                                X1="{Binding ErrorDetail.Azimuth.X}"
                                X2="{Binding ErrorDetail.Total.X}"
                                Y1="{Binding ErrorDetail.Azimuth.Y}"
                                Y2="{Binding ErrorDetail.Total.Y}" />

                            <!--  Azimuth Error  -->
                            <Line
                                Stroke="{StaticResource AzimuthErrorColor}"
                                StrokeThickness="3"
                                X1="{Binding ErrorDetail.Altitude.X}"
                                X2="{Binding ErrorDetail.Total.X}"
                                Y1="{Binding ErrorDetail.Altitude.Y}"
                                Y2="{Binding ErrorDetail.Total.Y}" />
                            <Line
                                Stroke="{StaticResource AzimuthErrorColor}"
                                StrokeThickness="3"
                                X1="{Binding ErrorDetail.Origin.X}"
                                X2="{Binding ErrorDetail.Azimuth.X}"
                                Y1="{Binding ErrorDetail.Origin.Y}"
                                Y2="{Binding ErrorDetail.Azimuth.Y}" />

                            <!--  Total Error  -->
                            <Line
                                Opacity="0.2"
                                Stroke="{StaticResource TotalErrorColor}"
                                StrokeThickness="3"
                                X1="{Binding ErrorDetail2.Origin.X}"
                                X2="{Binding ErrorDetail2.Total.X}"
                                Y1="{Binding ErrorDetail2.Origin.Y}"
                                Y2="{Binding ErrorDetail2.Total.Y}" />

                            <!--  Destination Circle  -->
                            <Ellipse
                                Canvas.Left="{Binding ErrorDetail.Total, Converter={StaticResource PointToCircleParameterConverter}, ConverterParameter=X1|20}"
                                Canvas.Top="{Binding ErrorDetail.Total, Converter={StaticResource PointToCircleParameterConverter}, ConverterParameter=Y1|20}"
                                Width="{Binding ErrorDetail.Total, Converter={StaticResource PointToCircleParameterConverter}, ConverterParameter=X2|20}"
                                Height="{Binding ErrorDetail.Total, Converter={StaticResource PointToCircleParameterConverter}, ConverterParameter=Y2|20}"
                                Opacity="0.2"
                                Stroke="{StaticResource TargetCircleColor}"
                                StrokeThickness="3"
                                Visibility="{Binding ErrorDetail, Converter={StaticResource NullToVisibilityCollapsedConverter}}" />

                            <Ellipse
                                Canvas.Left="{Binding ErrorDetail.Total, Converter={StaticResource PointToCircleParameterConverter}, ConverterParameter=X1|50}"
                                Canvas.Top="{Binding ErrorDetail.Total, Converter={StaticResource PointToCircleParameterConverter}, ConverterParameter=Y1|50}"
                                Width="{Binding ErrorDetail.Total, Converter={StaticResource PointToCircleParameterConverter}, ConverterParameter=X2|50}"
                                Height="{Binding ErrorDetail.Total, Converter={StaticResource PointToCircleParameterConverter}, ConverterParameter=Y2|50}"
                                Opacity="0.2"
                                Stroke="{StaticResource TargetCircleColor}"
                                StrokeThickness="3"
                                Visibility="{Binding ErrorDetail, Converter={StaticResource NullToVisibilityCollapsedConverter}}" />

                            <!--  X Starting point  -->
                            <Line
                                Opacity="0.2"
                                Stroke="{StaticResource TargetCircleColor}"
                                StrokeThickness="3"
                                X1="{Binding ErrorDetail2.Origin.X, Converter={StaticResource AddToDoubleConverter}, ConverterParameter=-10}"
                                X2="{Binding ErrorDetail2.Origin.X, Converter={StaticResource AddToDoubleConverter}, ConverterParameter=10}"
                                Y1="{Binding ErrorDetail2.Origin.Y, Converter={StaticResource AddToDoubleConverter}, ConverterParameter=-10}"
                                Y2="{Binding ErrorDetail2.Origin.Y, Converter={StaticResource AddToDoubleConverter}, ConverterParameter=10}" />
                            <Line
                                Opacity="0.2"
                                Stroke="{StaticResource TargetCircleColor}"
                                StrokeThickness="3"
                                X1="{Binding ErrorDetail2.Origin.X, Converter={StaticResource AddToDoubleConverter}, ConverterParameter=-10}"
                                X2="{Binding ErrorDetail2.Origin.X, Converter={StaticResource AddToDoubleConverter}, ConverterParameter=10}"
                                Y1="{Binding ErrorDetail2.Origin.Y, Converter={StaticResource AddToDoubleConverter}, ConverterParameter=10}"
                                Y2="{Binding ErrorDetail2.Origin.Y, Converter={StaticResource AddToDoubleConverter}, ConverterParameter=-10}" />

                            <!--  Altitude Error  -->
                            <Line
                                Opacity="0.2"
                                Stroke="{StaticResource AltitudeErrorColor}"
                                StrokeThickness="3"
                                X1="{Binding ErrorDetail2.Origin.X}"
                                X2="{Binding ErrorDetail2.Altitude.X}"
                                Y1="{Binding ErrorDetail2.Origin.Y}"
                                Y2="{Binding ErrorDetail2.Altitude.Y}" />
                            <Line
                                Opacity="0.2"
                                Stroke="{StaticResource AltitudeErrorColor}"
                                StrokeThickness="3"
                                X1="{Binding ErrorDetail2.Azimuth.X}"
                                X2="{Binding ErrorDetail2.Total.X}"
                                Y1="{Binding ErrorDetail2.Azimuth.Y}"
                                Y2="{Binding ErrorDetail2.Total.Y}" />

                            <!--  Azimuth Error  -->
                            <Line
                                Opacity="0.2"
                                Stroke="{StaticResource AzimuthErrorColor}"
                                StrokeThickness="3"
                                X1="{Binding ErrorDetail2.Altitude.X}"
                                X2="{Binding ErrorDetail2.Total.X}"
                                Y1="{Binding ErrorDetail2.Altitude.Y}"
                                Y2="{Binding ErrorDetail2.Total.Y}" />
                            <Line
                                Opacity="0.2"
                                Stroke="{StaticResource AzimuthErrorColor}"
                                StrokeThickness="3"
                                X1="{Binding ErrorDetail2.Origin.X}"
                                X2="{Binding ErrorDetail2.Azimuth.X}"
                                Y1="{Binding ErrorDetail2.Origin.Y}"
                                Y2="{Binding ErrorDetail2.Azimuth.Y}" />
                        </Canvas>
                    </Viewbox>
                </Grid>
            </Border>

            <!--  Text Error Details  -->
            <Grid Grid.Row="1" Grid.ColumnSpan="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Border
                    Grid.Column="0"
                    BorderBrush="{DynamicResource BorderBrush}"
                    BorderThickness="0,0,1,0">
                    <GroupBox>
                        <GroupBox.Header>
                            <TextBlock
                                HorizontalAlignment="Center"
                                FontSize="36"
                                Foreground="{StaticResource AzimuthErrorColor}"
                                Text="Azimuth Error ⬌" />
                        </GroupBox.Header>
                        <UniformGrid VerticalAlignment="Center" Rows="3">
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontSize="36"
                                Foreground="{StaticResource AzimuthErrorColor}"
                                Text="{Binding PolarErrorDetermination.CurrentMountAxisAzimuthError}" />
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontSize="36"
                                Foreground="{StaticResource AzimuthErrorColor}"
                                Text="{Binding PolarErrorDetermination.CurrentMountAxisAzimuthErrorDirection}" />
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontSize="16"
                                Foreground="{StaticResource AzimuthErrorColor}"
                                Text="{Binding PolarErrorDetermination.InitialMountAxisAzimuthError}" />
                        </UniformGrid>
                    </GroupBox>
                </Border>
                <Border
                    Grid.Column="1"
                    BorderBrush="{DynamicResource BorderBrush}"
                    BorderThickness="0,0,1,0">
                    <GroupBox>
                        <GroupBox.Header>
                            <TextBlock
                                HorizontalAlignment="Center"
                                FontSize="36"
                                Foreground="{StaticResource AltitudeErrorColor}"
                                Text="Altitude Error ⬍" />
                        </GroupBox.Header>
                        <UniformGrid VerticalAlignment="Center" Rows="3">
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontSize="36"
                                Foreground="{StaticResource AltitudeErrorColor}"
                                Text="{Binding PolarErrorDetermination.CurrentMountAxisAltitudeError}" />
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontSize="36"
                                Foreground="{StaticResource AltitudeErrorColor}"
                                Text="{Binding PolarErrorDetermination.CurrentMountAxisAltitudeErrorDirection}" />
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontSize="16"
                                Foreground="{StaticResource AltitudeErrorColor}"
                                Text="{Binding PolarErrorDetermination.InitialMountAxisAltitudeError}" />
                        </UniformGrid>
                    </GroupBox>
                </Border>
                <Border
                    Grid.Column="2"
                    BorderBrush="{DynamicResource BorderBrush}"
                    BorderThickness="0,0,0,0">
                    <GroupBox>
                        <GroupBox.Header>
                            <TextBlock
                                HorizontalAlignment="Center"
                                FontSize="36"
                                Foreground="{StaticResource TotalErrorColor}"
                                Text="Total Error" />
                        </GroupBox.Header>

                        <UniformGrid VerticalAlignment="Center" Rows="3">
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontSize="36"
                                Foreground="{StaticResource TotalErrorColor}"
                                Text="{Binding PolarErrorDetermination.CurrentMountAxisTotalError}" />
                            <Grid />
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontSize="16"
                                Foreground="{StaticResource TotalErrorColor}"
                                Text="{Binding PolarErrorDetermination.InitialMountAxisTotalError}" />
                        </UniformGrid>
                    </GroupBox>
                </Border>
            </Grid>
        </Grid>
    </DataTemplate>
</ResourceDictionary>
